openapi: 3.0.0
servers:
  - description: localhost
    url: http://localhost:3000/api/v1
info:
  version: "1.0.0"
  title: CRUD Server Demo Application API
  contact:
    email: annus.norbert@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: books
    description: Books related calls
paths:
  /books:
    get:
      tags:
        - books
      summary: Get books
      operationId: getBooks
      description: |
        Retrieves all the available books in the system
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookDTO'
    post:
      tags:
        - books
      summary: Create new book
      operationId: createBook
      description: |
        Creates a new book in the system
      responses:
        '201':
          description: Book has been successfully created
          headers:
            Location:
              schema:
                type: string
                format: uri
              description: The resource URI of the created book
        '400':
          description: Validation failed
        '409':
          description: Book already exists with the given id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBookDTO'
        description: Book item to create
  /books/:id:
    get:
      tags:
        - books
      summary: Get book
      operationId: getBook
      description: |
        Retrieves an existing book from the system
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Id of the book to retrieve
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookDTO'
        '404':
          description: Book does not exist with the given id
    delete:
      tags:
        - books
      summary: Delete book
      operationId: deleteBook
      description: |
        Removes an existing book from the system
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Id of the book to remove
      responses:
        '204':
          description: Book has been successfully removed
        '404':
          description: Book does not exist with the given id      
    patch:
      tags:
        - books
      summary: Update book
      operationId: updateBook
      description: |
        Updates an existing book in the system
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Id of the book to update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookUpdateDTO'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookDTO'
        '400':
          description: Validation failed
        '404':
          description: Book does not exist with the given id
components:
  schemas:
    BookDTO:
      type: object
      required:
        - id
        - isbn13
        - title
      properties:
        authors:
          type: array
          items:
            type: string
            description: Full name of author
            example: Gayle Laakmann McDowell
          description: Authors of the book
        categories:
          type: array
          items:
            type: string
            description: Category name
            example: Computers & Technology
          description: Categories to which to book belongs to
        id:
          type: number
          description: ID of the book
          example: 6
        isbn10:
          type: string
          description: ISBN-10 of the book
          example: 0984782850
        isbn13:
          type: string
          description: ISBN-13 of the book
          example: 9780984782857
        publicationDate:
          type: string
          description: Publication date of the book
          example: 2015-07-01
        publishers:
          type: array
          items:
            type: string
            description: Publisher name
            example: CareerCup
          description: Publishers of the book
        title:
          type: string
          description: Title of the book
          example: 'Cracking the Coding Interview, 6th Edition: 189 Programming Questions and Solutions'
    BookUpdateDTO:
      type: object
    NewBookDTO:
      type: object
      required:
        - isbn13
        - title
      properties:
        isbn10:
          type: string
          description: ISBN-10 of the book
        isbn13:
          type: string
          description: ISBN-13 of the book
        publicationDate:
          type: string
          description: Publication date of the book
        title:
          type: string
          description: Title of the book